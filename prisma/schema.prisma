generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BL_Home {
  id   String @id @default(cuid())
  name String

  users    BL_User[]
  expenses BL_Expense[]
}

model BL_User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  homeId   String?
  home     BL_Home?     @relation(fields: [homeId], references: [id])
  accounts BL_Account[]
  sessions BL_Session[]
  expenses BL_Expense[]
}

model BL_Expense {
  id        String   @id @default(cuid())
  name      String
  amount    Int
  date      DateTime
  is_repeat Boolean

  userId String
  user   BL_User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  typeId String
  type   BL_Type  @relation(fields: [typeId], references: [id], onDelete: Cascade)
  homeId String?
  home   BL_Home? @relation(fields: [homeId], references: [id], onDelete: Cascade)
}

model BL_Type {
  id       String       @id @default(cuid())
  name     String       @unique
  expenses BL_Expense[]
}

model BL_Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user BL_User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model BL_Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user BL_User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model BL_VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
